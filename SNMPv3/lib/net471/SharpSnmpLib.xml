<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpSnmpLib</name>
    </assembly>
    <members>
        <member name="T:Lextm.SharpSnmpLib.ByteTool">
            <summary>
            Helper utility that performs data conversions from/to bytes.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.ConvertDecimal(System.String)">
            <summary>
            Converts decimal string to bytes.
            </summary>
            <param name="description">The decimal string.</param>
            <returns>The converted bytes.</returns>
            <remarks><c>" 16 18 "</c> is converted to <c>new byte[] { 0x10, 0x12 }</c>.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.Convert(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Converts the byte string to bytes.
            </summary>
            <param name="description">The HEX string.</param>
            <returns>The converted bytes.</returns>
            <remarks><c>"80 00"</c> is converted to <c>new byte[] { 0x80, 0x00 }</c>.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.Convert(System.Byte[])">
            <summary>
            Converts bytes to a byte string.
            </summary>
            <param name="buffer">The bytes.</param>
            <returns>The formatted string.</returns>
            <remarks><c>new byte[] { 0x80, 0x00 }</c> is converted to <c>"80 00"</c>.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ByteTool.PackMessage(System.Byte[],Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Packs parts into a single message body.
            </summary>
            <param name="length">Message length.</param>
            <param name="version">Message version.</param>
            <param name="header">Header.</param>
            <param name="parameters">Security parameters.</param>
            <param name="data">Scope data.</param>
            <returns>The <see cref="T:Lextm.SharpSnmpLib.Sequence" /> object that represents the message body.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Counter32">
            <summary>
            Counter32 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter32"/> instance from raw bytes.
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.UInt32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter32"/> with a specific <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Counter32"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter32"/> instance from stream.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Counter32.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.ToUInt32">
            <summary>
            Returns a <see cref="T:System.UInt32"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.
            </summary>
            <returns>A <c>uint</c> that represents the current object.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.GetRaw">
            <summary>
            Gets that raw bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.Equals(Lextm.SharpSnmpLib.Counter32)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Counter32"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.op_Equality(Lextm.SharpSnmpLib.Counter32,Lextm.SharpSnmpLib.Counter32)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.op_Inequality(Lextm.SharpSnmpLib.Counter32,Lextm.SharpSnmpLib.Counter32)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter32.Equals(Lextm.SharpSnmpLib.Counter32,Lextm.SharpSnmpLib.Counter32)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Counter64">
            <summary>
            Counter64 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter64"/> instance from raw bytes.
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.#ctor(System.UInt64)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Counter64"/> with a specific <see cref="T:System.UInt64"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Counter64"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Counter64.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.ToUInt64">
            <summary>
            Returns a <see cref="T:System.UInt64"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.GetRaw">
            <summary>
            Gets that raw bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.Equals(Lextm.SharpSnmpLib.Counter64)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Counter64"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.op_Equality(Lextm.SharpSnmpLib.Counter64,Lextm.SharpSnmpLib.Counter64)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.op_Inequality(Lextm.SharpSnmpLib.Counter64,Lextm.SharpSnmpLib.Counter64)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Counter64.Equals(Lextm.SharpSnmpLib.Counter64,Lextm.SharpSnmpLib.Counter64)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Counter64"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.DataFactory">
            <summary>
            Factory that creates <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from buffer.
            </summary>
            <param name="buffer">Buffer</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.Int32,System.IO.Stream)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="type">Type code.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from buffer.
            </summary>
            <param name="buffer">Buffer</param>
            <param name="index">Index</param>
            <param name="count">Count</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.DataFactory.CreateSnmpData(System.IO.Stream)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instance from stream.
            </summary>
            <param name="stream">Stream</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.EndOfMibView">
            <summary>
            EndOfMibView exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Null"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.Equals(Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.op_Equality(Lextm.SharpSnmpLib.EndOfMibView,Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.op_Inequality(Lextm.SharpSnmpLib.EndOfMibView,Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.EndOfMibView.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Null"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.EndOfMibView.Equals(Lextm.SharpSnmpLib.EndOfMibView,Lextm.SharpSnmpLib.EndOfMibView)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.EndOfMibView"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ErrorCode">
            <summary>
            Error code for SNMP operations. (0-5 are first defined in SNMP v1, and others are added in v2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoError">
            <summary>
            There was no problem performing the request.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.TooBig">
            <summary>
            The response to your request was too big to fit into one response.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoSuchName">
            <summary>
            An agent was asked to get or set an OID that it can't find; i.e., the OID doesn't exist.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.BadValue">
            <summary>
            A read-write or write-only object was set to an inconsistent value.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.ReadOnly">
            <summary>
            This error is generally not used. The noSuchName error is equivalent to this one.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.GenError">
            <summary>
            This is a catch-all error. If an error occurs for which none of the previous messages is appropriate, a genError is issued.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoAccess">
            <summary>
            A set to an inaccessible variable was attempted. This typically occurs when the variable has an ACCESS type of not-accessible.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongType">
            <summary>
            An object was set to a type that is different from its definition. This error will occur if you try to set an object that is of type INTEGER to a string, for example.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongLength">
            <summary>
            An object's value was set to something other than what it calls for. For instance, a string can be defined to have a maximum character size. This error occurs if you try to set a string object to a value that exceeds its maximum length.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongEncoding">
            <summary>
            A set operation was attempted using the wrong encoding for the object being set.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.WrongValue">
            <summary>
            A variable was set to a value it doesn't understand. This can occur when a read-write is defined as an enumeration, and you try to set it to a value that is not one of the enumerated types.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NoCreation">
            <summary>
            You tried to set a nonexistent variable or create a variable that doesn't exist in the MIB.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.InconsistentValue">
            <summary>
            A MIB variable is in an inconsistent state, and is not accepting any set requests.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.ResourceUnavailable">
            <summary>
            No system resources are available to perform a set.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.CommitFailed">
            <summary>
            This is a catch-all error for set failures.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.UndoFailed">
            <summary>
            A set failed and the agent was unable to roll back all the previous sets up until the point of failure.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.AuthorizationError">
            <summary>
            An SNMP command could not be authenticated; in other words, someone has supplied an incorrect community string.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.NotWritable">
            <summary>
            A variable will not accept a set, even though it is supposed to.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.ErrorCode.InconsistentName">
            <summary>
            You attempted to set a variable, but that attempt failed because the variable was in some kind of inconsistent state.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Gauge32">
            <summary>
            Gauge32 type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> instance from raw bytes.
            </summary>
            <param name="raw"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.UInt32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> with a specific <see cref="T:System.UInt32"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Gauge32.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.ToUInt32">
            <summary>
            Returns a <see cref="T:System.UInt32"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.Equals(Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Gauge32"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.op_Equality(Lextm.SharpSnmpLib.Gauge32,Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.op_Inequality(Lextm.SharpSnmpLib.Gauge32,Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Gauge32.Equals(Lextm.SharpSnmpLib.Gauge32,Lextm.SharpSnmpLib.Gauge32)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Gauge32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GenericCode">
            <summary>
            Generic trap code.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.ColdStart">
            <summary>
            Indicates that the agent has rebooted. All management variables will be reset; specifically, Counters and Gauges will be reset to zero (0). One nice thing about the coldStart trap is that it can be used to determine when new hardware is added to the network. When a device is powered on, it sends this trap to its trap destination. If the trap destination is set correctly (i.e., to the IP address of your NMS) the NMS can receive the trap and determine whether it needs to manage the device.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.WarmStart">
            <summary>
            Indicates that the agent has reinitialized itself. None of the management variables will be reset.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.LinkDown">
            <summary>
            Sent when an interface on a device goes down. The first variable binding identifies which interface went down.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.LinkUp">
            <summary>
            Sent when an interface on a device comes back up. The first variable binding identifies which interface came back up.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.AuthenticationFailure">
            <summary>
            Indicates that someone has tried to query your agent with an incorrect community string; useful in determining if someone is trying to gain unauthorized access to one of your devices.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.EgpNeighborLoss">
            <summary>
            Indicates that an Exterior Gateway Protocol (EGP) neighbor has gone down.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.GenericCode.EnterpriseSpecific">
            <summary>
            Indicates that the trap is enterprise-specific. SNMP vendors and users define their own traps under the private-enterprise branch of the SMI object tree. To process this trap properly, the NMS has to decode the specific trap number that is part of the SNMP message.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetBulkRequestPdu">
            <summary>
            GETBULK request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetBulkRequestPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="nonRepeaters">Non-repeaters.</param>
            <param name="maxRepetitions">Max repetitions.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetBulkRequestPdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetBulkRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetBulkRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetBulkRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetNextRequestPdu">
            <summary>
            GETNEXT request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.#ctor(System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetNextRequestPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetNextRequestPdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetNextRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetNextRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetNextRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.GetRequestPdu">
            <summary>
            GET request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.#ctor(System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.GetRequestPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="variables">Variables</param>      
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.GetRequestPdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.GetRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.GetRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.GetRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Header">
            <summary>
            Header segment.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Header.MaxMessageSize">
            <summary>
            Max message size used in #SNMP. 
            </summary>
            <remarks>
            You can use any value for your own application. 
            Also this value may be changed in #SNMP in future releases.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Header"/> class.
            </summary>
            <param name="messageId">The message identifier.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.#ctor(Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Header"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.#ctor(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Levels)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Header"/> class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="securityLevel">The security level.</param>
            <remarks>If you want an empty header, please use <see cref="P:Lextm.SharpSnmpLib.Header.Empty"/>.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Header.Empty">
            <summary>
            Empty header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Header.SecurityLevel">
            <summary>
            Security flags.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Header.MessageId">
            <summary>
            Gets the message ID.
            </summary>
            <value>The message ID.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Header.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Header.MaxSize">
            <summary>
            Gets or sets the size of the max.
            </summary>
            <value>The size of the max.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Helper">
            <summary>
            Class Helper.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Helper.ToIPAddress(Lextm.SharpSnmpLib.IP)">
            <summary>
            Converts <see cref="T:Lextm.SharpSnmpLib.IP" /> to <see cref="T:System.Net.IPAddress" />.
            </summary>
            <param name="ip">The <see cref="T:Lextm.SharpSnmpLib.IP" /> object.</param>
            <returns>The <see cref="T:System.Net.IPAddress" /> object.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Helper.ToPhysicalAddress(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Converts <see cref="T:Lextm.SharpSnmpLib.OctetString" /> to <see cref="T:System.Net.NetworkInformation.PhysicalAddress" />.
            </summary>
            <param name="address">The <see cref="T:Lextm.SharpSnmpLib.OctetString" /> object that holds the address.</param>
            <returns>The <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object.</returns>
            <exception cref="T:System.InvalidCastException"><paramref name="address"/> length is not equal to 6.</exception>
        </member>
        <member name="T:Lextm.SharpSnmpLib.InformRequestPdu">
            <summary>
            INFORM request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/> instance with all content.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="enterprise">Enterprise</param>
            <param name="time">Time stamp</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.#ctor(System.Int32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/> instance for discovery.
            </summary>
            <param name="requestId">The request id.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.Enterprise">
            <summary>
            Gets the enterprise.
            </summary>
            <value>The enterprise.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.InformRequestPdu.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.InformRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.InformRequestPdu.Decorate(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Decorates a list of <see cref="T:Lextm.SharpSnmpLib.Variable"/> objects with time and enterprise ID.
            </summary>
            <param name="variables">The variables.</param>
            <returns>Decorated list.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Integer32">
            <summary>
            Integer32 type in SMIv2 (or INTEGER in SMIv1).
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Integer32.Zero">
            <summary>
            Zero.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Integer32"/> instance.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.#ctor(System.Int32)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Integer32"/> instance with a specific <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">Value</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Integer32"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToInt32">
            <summary>
            Returns an <see cref="T:System.Int32"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToErrorCode">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.ErrorCode"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Integer32.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Integer32"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.Equals(Lextm.SharpSnmpLib.Integer32)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.op_Equality(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.op_Inequality(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Integer32.Equals(Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Integer32"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.IP">
            <summary>
            IPAddress type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.IP"/> class.
            </summary>
            <param name="ip">The IP bytes.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="ip" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Lextm.SharpSnmpLib.IP"/> class from a specific <see cref="T:System.String"/>.
            </summary>
            <param name="ip">IP string</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.IP"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.GetRaw">
            <summary>
            Gets the raw bytes.
            </summary>
            <returns>System.Byte[].</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.IP"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.IP.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.IP"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.IP"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.IP"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.Equals(Lextm.SharpSnmpLib.IP)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.IP"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.op_Equality(Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.IP)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.op_Inequality(Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.IP)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.IP.Equals(Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.IP)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.IP"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISegment">
            <summary>
            Segment interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISegment.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISegment.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISnmpData">
            <summary>
            SNMP data entity.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpData.TypeCode">
            <summary>
            Type code
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpData.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ISnmpData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ISnmpPdu">
            <summary>
            SNMP PDU.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ISnmpPdu.Variables">
            <summary>
            Variable bindings.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Levels">
            <summary>
            Security level.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Levels.Authentication">
            <summary>
            Authentication flag.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Levels.Privacy">
            <summary>
            Privacy flag.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Levels.Reportable">
            <summary>
            Reportable flag.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.MalformedPdu">
            <summary>
            Malformed PDU class. Many things are not implemented as they are not in use.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.MalformedPdu.TypeCode">
            <summary>
            Type code.
            </summary>
            <value>Returns <see cref="T:Lextm.SharpSnmpLib.SnmpType"/> unknown type.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.MalformedPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.MalformedPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.MalformedPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.MalformedPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.MalformedPdu.Variables">
            <summary>
            Variable bindings.
            </summary>
            <value>Returns an empty list.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.MalformedPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs">
            <summary>
            Event arguments for agent found event.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.Agent">
            <summary>
            Gets the agent.
            </summary>
            <value>The agent.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.Variable">
            <summary>
            Gets the variable.
            </summary>
            <value>The variable.</value>
            <remarks>If the agent is SNMP v3, this is <c>null</c>.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs"/> class.
            </summary>
            <param name="agent">The agent.</param>
            <param name="variable">The variable.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Discoverer">
            <summary>
            Discoverer class to discover SNMP agents in the same network.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Discoverer.AgentFound">
            <summary>
            Occurs when an SNMP agent is found.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Discoverer.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
            <remarks>The exception is typical <see cref="T:System.Net.Sockets.SocketException"/> here.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discoverer.Discover(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Int32)">
            <summary>
            Discovers agents of the specified version in a specific time interval.
            </summary>
            <param name="version">The version.</param>
            <param name="broadcastAddress">The broadcast address.</param>
            <param name="community">The community.</param>
            <param name="interval">The discovering time interval, in milliseconds.</param>
            <remarks><paramref name="broadcastAddress"/> must be an IPv4 address. IPv6 is not yet supported here.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discoverer.DiscoverAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Int32)">
            <summary>
            Discovers agents of the specified version in a specific time interval.
            </summary>
            <param name="version">The version.</param>
            <param name="broadcastAddress">The broadcast address.</param>
            <param name="community">The community.</param>
            <param name="interval">The discovering time interval, in milliseconds.</param>
            <remarks><paramref name="broadcastAddress"/> must be an IPv4 address. IPv6 is not yet supported here.</remarks>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Discovery">
            <summary>
            Discovery class that participates in SNMP v3 discovery process.
            </summary>
            <summary>
            Discovery class that participates in SNMP v3 discovery process.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Discovery"/> class.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="messageId">The message id.</param>
            <param name="maxMessageSize">The max size of message.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.#ctor(System.Int32,System.Int32,System.Int32,Lextm.SharpSnmpLib.SnmpType)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Discovery"/> class.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="messageId">The message id.</param>
            <param name="maxMessageSize">The max size of message.</param>
            <param name="type">Message type.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.GetResponse(System.Int32,System.Net.IPEndPoint)">
            <summary>
            Gets the response.
            </summary>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">The receiver.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.GetResponseAsync(System.Net.IPEndPoint)">
            <summary>
            Gets the response.
            </summary>
            <param name="receiver">The receiver.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discovery.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.EndPointExtension">
            <summary>
            Extension methods for <see cref="T:System.Net.EndPoint"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.EndPointExtension.GetSocket(System.Net.EndPoint)">
            <summary>
            Gets the socket.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ErrorException">
            <summary>
            Error exception of #SNMP. Raised when an error message is received.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ErrorException.Body">
            <summary>
            Message body.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ErrorException.Details">
            <summary>
            Details on error.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ErrorException.Create(System.String,System.Net.IPAddress,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ErrorException"/>.
            </summary>
            <param name="message">Message.</param>
            <param name="agent">Agent address.</param>
            <param name="body">Error message body.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs">
            <summary>
            Provides data for exception raised event.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs.#ctor(System.Exception)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs"/>.
            </summary>
            <param name="ex">Exception.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage">
            <summary>
            GETBULK request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="nonRepeaters">Non-repeaters.</param>
            <param name="maxRepetitions">Max repetitions.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="nonRepeaters">The non repeaters.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="contextName">Context name.</param>
            <param name="nonRepeaters">The non repeaters.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="nonRepeaters">The non repeaters.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetBulkRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage">
            <summary>
            GETNEXT request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="contextName">Context name.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetNextRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage">
            <summary>
            GET request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="contextName">Context name.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Version">
            <summary>
            Version.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.GetRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage">
            <summary>
            INFORM request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time ticks.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="contextName">The context name.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.InformRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage">
            <summary>
            SNMP message.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ISnmpMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MalformedMessage">
            <summary>
            Malformed message for v3 due to decryption failures or wrong user names. 
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.MalformedMessage"/> class.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="user">The user.</param>
            <param name="data">The data encrypted.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.EncryptedScope">
            <summary>
            Encrypted scope data.
            </summary>
            <value>The original scope data from packet, which remains encrypted.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The fake scope, which is used to avoid exceptions in message handling.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.ToBytes">
            <summary>
            Converts to the bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MalformedMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MalformedMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageFactory">
            <summary>
            Factory that creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from byte format.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Collections.Generic.IEnumerable{System.Char},Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from a string.
            </summary>
            <param name="bytes">Byte string.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Byte[],Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from buffer.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactory.ParseMessages(System.Byte[],System.Int32,System.Int32,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Creates <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> instances from buffer.
            </summary>
            <param name="buffer">Buffer.</param>
            <param name="index">The index.</param>
            <param name="length">The length.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException">
            <summary>
            Message factory exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.GetBytes">
            <summary>
            Gets the bytes.
            </summary>        
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.SetBytes(System.Byte[])">
            <summary>
            Sets the bytes.
            </summary>
            <param name="value">Bytes.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageFactoryException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageFactoryException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Messenger">
            <summary>
            Messenger class contains all static helper methods you need to send out SNMP messages.
            Static methods in Manager or Agent class will be removed in the future.
            </summary>
            <remarks>
            SNMP v3 is not supported in many methods of this class. Please use <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage" /> derived classes directly
            if you want to do v3 operations.
            </remarks>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Messenger.RequestCounterFullRange">
            <summary>
            RFC 3416 (3.)
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.RequestCounter">
            <summary>
            The universal counter for request IDs and other IDs.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UseFullRange">
            <summary>
            A flag to control request ID range.
            </summary>
            <remarks>Default is <code>true</code>.
            Should be set to <code>false</code> when SNMP devices might not support negative request ID values.
            </remarks>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Messenger.MessageCounter">
            <summary>
            RFC 3412 (6.)
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SetAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.WalkAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Messaging.WalkMode)">
            <summary>
            Walks (based on GET NEXT).
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="mode">Walk mode.</param>
            <returns>
            Returns row count if the OID is a table. Otherwise this value is meaningless.
            </returns>
            <remarks>This method only supports SNMP v1 and v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.HasNextAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="community">The community.</param>
            <param name="seed">The seed.</param>
            <returns>
                <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
            <remarks>This method only supports SNMP v1 and v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkWalkAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Walks (based on GET BULK).
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name (v2c) or user name (v3).</param>
            <param name="contextName">Context name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="mode">Walk mode.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns>Returns row count if the OID is a table. Otherwise this value is meaningless.</returns>
            <remarks>This method only supports SNMP v2c and v3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV1Async(System.Net.EndPoint,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends a TRAP v1 message.
            </summary>
            <param name="receiver">Receiver.</param>
            <param name="agent">Agent.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="generic">Generic code.</param>
            <param name="specific">Specific code.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <remarks>This method only supports SNMP v1.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV2Async(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.EndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends TRAP v2 message.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="requestId">Request ID.</param>
            <remarks>This method only supports SNMP v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendInformAsync(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Sends INFORM message.
            </summary>
            <param name="requestId">The request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="contextName">Context name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <remarks>This method supports SNMP v2c and v3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkHasNextAsync(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="receiver">The receiver.</param>
            <param name="community">The community name (v2c) or user name (v3).</param>
            <param name="contextName">The context name.</param>
            <param name="seed">The seed.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns>
            <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
            <remarks>This method supports SNMP v2c and v3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Get(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32)">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <returns></returns>
            <remarks>This method supports SNMP v1 and v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Set(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32)">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <returns></returns>
            <remarks>This method supports SNMP v1 and v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Walk(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode)">
            <summary>
            Walks (based on GET NEXT).
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="mode">Walk mode.</param>
            <returns>
            Returns row count if the OID is a table. Otherwise this value is meaningless.
            </returns>
            <remarks>This method supports SNMP v1 and v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.HasNext(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,Lextm.SharpSnmpLib.Variable@)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="community">The community.</param>
            <param name="seed">The seed.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="next">The next.</param>
            <returns>
                <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
            <remarks>This method supports SNMP v1 and v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkWalk(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Walks (based on GET BULK).
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name (v2c) or user name (v3).</param>
            <param name="contextName">Context name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="mode">Walk mode.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns>Returns row count if the OID is a table. Otherwise this value is meaningless.</returns>
            <remarks>This method supports SNMP v2c and v3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV1(System.Net.EndPoint,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends a TRAP v1 message.
            </summary>
            <param name="receiver">Receiver.</param>
            <param name="agent">Agent.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="generic">Generic code.</param>
            <param name="specific">Specific code.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <remarks>This method supports SNMP v1.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV2(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.EndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends TRAP v2 message.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="requestId">Request ID.</param>
            <remarks>This method supports SNMP v2c.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendInform(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Sends INFORM message.
            </summary>
            <param name="requestId">The request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name (v2c) or user name (v3).</param>
            <param name="contextName">Context name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <remarks>This method supports SNMP v2c and v3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkHasNext(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable}@,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage@)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="receiver">The receiver.</param>
            <param name="community">The community name (v2c) or user name (v3).</param>
            <param name="contextName">The context name.</param>
            <param name="seed">The seed.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="next">The next.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns>
            <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
            <remarks>This method supports SNMP v2c and v3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetTable(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Int32,System.Int32)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <returns></returns>
            <remarks>This method supports SNMP v2c and v3.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextRequestId">
            <summary>
            Gets the request counter.
            </summary>
            <value>The request counter.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextMessageId">
            <summary>
            Gets the message counter.
            </summary>
            <value>The message counter.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.MaxMessageSize">
            <summary>
            Max message size used in #SNMP. 
            </summary>
            <remarks>
            You can use any value for your own application. 
            Also this value may be changed in #SNMP in future releases.
            </remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.DecryptionError">
            <summary>
            If the privacy module returns failure, then the message can
            not be processed, so the usmStatsDecryptionErrors counter is
            incremented and an error indication (decryptionError) together
            with the OID and value of the incremented counter is returned
            to the calling module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.AuthenticationFailure">
            <summary>
            If the authentication module returns failure, then the message
            cannot be trusted, so the usmStatsWrongDigests counter is
            incremented and an error indication (authenticationFailure)
            together with the OID and value of the incremented counter is
            returned to the calling module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UnknownEngineId">
            <summary>
            If the value of the msgAuthoritativeEngineID field in the
            securityParameters is unknown then
            the usmStatsUnknownEngineIDs counter is incremented, and an
            error indication (unknownEngineID) together with the OID and
            value of the incremented counter is returned to the calling
            module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UnknownSecurityName">
            <summary>
            Information about the value of the msgUserName and
            msgAuthoritativeEngineID fields is extracted from the Local
            Configuration Datastore (LCD, usmUserTable).  If no information
            is available for the user, then the usmStatsUnknownUserNames
            counter is incremented and an error indication
            (unknownSecurityName) together with the OID and value of the
            incremented counter is returned to the calling module.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NotInTimeWindow">
            <summary>
            If the message is considered to be outside of the Time Window
            then the usmStatsNotInTimeWindows counter is incremented and
            an error indication (notInTimeWindow) together with the OID,
            the value of the incremented counter, and an indication that
            the error must be reported with a securityLevel of authNoPriv,
            is returned to the calling module
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.UnsupportedSecurityLevel">
            <summary>
            If the information about the user indicates that it does not
            support the securityLevel requested by the caller, then the
            usmStatsUnsupportedSecLevels counter is incremented and an error
            indication (unsupportedSecurityLevel) together with the OID and
            value of the incremented counter is returned to the calling
            module.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetNextDiscovery(Lextm.SharpSnmpLib.SnmpType)">
            <summary>
            Returns a new discovery request.
            </summary>
            <param name="type">Message type.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetErrorMessage(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Returns error message for the specific <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <param name="id">The OID.</param>
            <returns>Error message.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.NumberGenerator">
            <summary>
            A counter that generates ID.
            </summary>
            <remarks>The request ID is used to identifier sessions.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.NumberGenerator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.NumberGenerator"/> class.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.NumberGenerator.NextId">
            <summary>
            Returns next ID. This method is thread-safe within this instance of NumberGenerator.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.PortInUseException">
            <summary>
            Exception raised when an IP endpoint is already in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.PortInUseException.Endpoint">
            <summary>
            The endpoint already in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ReportMessage">
            <summary>
            REPORT message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.Scope,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/> class.
            </summary>
            <param name="version">The version code.</param>
            <param name="header">The header.</param>
            <param name="parameters">The security parameters.</param>
            <param name="scope">The scope.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Parameters">
            <summary>
            Security parameters.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ReportMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ReportMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.ReportMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage">
            <summary>
            Response message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage"/> with all contents.
            </summary>
            <param name="requestId">Request ID.</param>
            <param name="version">Protocol version.</param>
            <param name="community">Community name.</param>
            <param name="error">Error code.</param>
            <param name="index">Error index.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.Scope,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Boolean,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="scope">The scope.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="needAuthentication">if set to <c>true</c>, authentication is needed.</param>
            <param name="length">The length bytes.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ErrorStatus">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ErrorIndex">
            <summary>
            Error index.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ResponseMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ResponseMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.ResponseMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage">
            <summary>
            SET request message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version</param>
            <param name="community">Community name</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="contextName">The context name.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="report">The report.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.SetRequestMessage"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SetRequestMessage.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension">
            <summary>
            Extension methods for <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.TypeCode(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Gets the <see cref="T:Lextm.SharpSnmpLib.SnmpType"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Variables(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Variables.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.RequestId(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Request ID.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.MessageId(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Gets the message ID.
            </summary>
            <value>The message ID.</value>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <remarks>For v3, message ID is different from request ID. For v1 and v2c, they are the same.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Pdu(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            PDU.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Community(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Community name.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Send(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.Send(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Port number.</param>
            <param name="registry">User registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Port number.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Int32,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.Sockets.Socket)">
            <summary>
            Sends an  <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <param name="registry">The user registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.SendAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.SendAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="manager">Manager</param>
            <param name="socket">The socket.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponseAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="receiver">Port number.</param>
            <param name="registry">User registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponseAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="receiver">Port number.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponseAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,System.Net.Sockets.Socket)">
            <summary>
            Sends this <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.GetResponseAsync(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,System.Net.Sockets.Socket)">
            <summary>
            Sends an <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> and handles the response from agent.
            </summary>
            <param name="request">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="receiver">Agent.</param>
            <param name="udpSocket">The UDP <see cref="T:System.Net.Sockets.Socket"/> to use to send/receive.</param>
            <param name="registry">The user registry.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.IsRunningOnMono">
            <summary>
            Tests if running on Mono.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.IsRunningOnWindows">
            <summary>
            Gets a value indicating whether it is
            running on Windows.
            </summary>
            <value><c>true</c> if is running on Windows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.IsRunningOnMac">
            <summary>
            Gets a value indicating whether it is running on macOS.
            </summary>
            <value><c>true</c> if is running on macOS; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.IsRunningOnIOS">
            <summary>
            Gets a value indicating whether it is running on iOS.
            </summary>
            <value><c>true</c> if is running on iOS; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.SnmpMessageExtension.PackMessage(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Byte[])">
            <summary>
            Packs up the <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </summary>
            <param name="message">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TimeoutException">
            <summary>
            Timeout exception type of #SNMP.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TimeoutException.Timeout">
            <summary>
            The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/> instance.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TimeoutException.Create(System.Net.IPAddress,System.Int32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TimeoutException"/>.
            </summary>
            <param name="agent">Agent address</param>
            <param name="timeout">Timeout</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message">
            <summary>
            Trap message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> with all content.
            </summary>
            <param name="version">Protocol version</param>
            <param name="agent">Agent address</param>
            <param name="community">Community name</param>
            <param name="enterprise">Enterprise</param>
            <param name="generic">Generic</param>
            <param name="specific">Specific</param>
            <param name="time">Time</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.#ctor(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> instance with a message body.
            </summary>
            <param name="body">Message body</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Community">
            <summary>
            Community name.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.AgentAddress">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Generic">
            <summary>
            Generic type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Specific">
            <summary>
            Specific type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Version">
            <summary>
            Protocol version.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.ToBytes">
            <summary>
            To byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
            <remarks><see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> returns null here.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV1Message.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
            <remarks><see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> returns null here.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV1Message.PackMessage(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISnmpData[])">
            <summary>
            Packs the message.
            </summary>
            <param name="version">The version.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message">
            <summary>
            TRAP v2 message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.#ctor(System.Int32,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> instance with all content.
            </summary>
            <param name="version">Version code.</param>
            <param name="community">Community.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time stamp.</param>
            <param name="variables">Variables.</param>
            <param name="requestId">Request ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.#ctor(Lextm.SharpSnmpLib.VersionCode,System.Int32,System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Int32,Lextm.SharpSnmpLib.OctetString,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="messageId">The message id.</param>
            <param name="requestId">The request id.</param>
            <param name="userName">Name of the user.</param>
            <param name="enterprise">The enterprise.</param>
            <param name="time">The time.</param>
            <param name="variables">The variables.</param>
            <param name="privacy">The privacy.</param>
            <param name="maxMessageSize">Size of the max message.</param>
            <param name="engineId">The engine ID.</param>
            <param name="engineBoots">The engine boots.</param>
            <param name="engineTime">The engine time.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Header">
            <summary>
            Gets the header.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The privacy provider.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>The scope.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.ToBytes">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.TrapV2Message.Version">
            <summary>
            Gets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.TrapV2Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.WalkMode">
            <summary>
            Walk mode.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.WalkMode.Default">
            <summary>
            Default mode walk to the end of MIB view.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.WalkMode.WithinSubtree">
            <summary>
            In this mode, walk within sub-tree.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.NoSuchInstance">
            <summary>
            NoSuchInstance exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.Equals(Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.op_Equality(Lextm.SharpSnmpLib.NoSuchInstance,Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.op_Inequality(Lextm.SharpSnmpLib.NoSuchInstance,Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.NoSuchInstance.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchInstance.Equals(Lextm.SharpSnmpLib.NoSuchInstance,Lextm.SharpSnmpLib.NoSuchInstance)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchInstance"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.NoSuchObject">
            <summary>
            NoSuchObject exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.Equals(Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.op_Equality(Lextm.SharpSnmpLib.NoSuchObject,Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.op_Inequality(Lextm.SharpSnmpLib.NoSuchObject,Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.NoSuchObject.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.NoSuchObject.Equals(Lextm.SharpSnmpLib.NoSuchObject,Lextm.SharpSnmpLib.NoSuchObject)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.NoSuchObject"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Null">
            <summary>
            Null type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Null"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Null"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Null.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Null"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Null"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Null"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Null"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.Equals(Lextm.SharpSnmpLib.Null)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.op_Equality(Lextm.SharpSnmpLib.Null,Lextm.SharpSnmpLib.Null)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.op_Inequality(Lextm.SharpSnmpLib.Null,Lextm.SharpSnmpLib.Null)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Null"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Null.Equals(Lextm.SharpSnmpLib.Null,Lextm.SharpSnmpLib.Null)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Null"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ObjectIdentifier">
            <summary>
            ObjectIdentifier type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance from textual ID.
            </summary>
            <param name="text">String in this format, "*.*.*.*".</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.UInt32[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance from numerical ID.
            </summary>
            <param name="id">OID <see cref="T:System.UInt32"/> array</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.ToNumerical">
            <summary>
            Converts to numerical ID.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Compare(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.CompareTo(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Convert(System.UInt32[])">
            <summary>
            Converts unsigned integer array to dotted <see cref="T:System.String"/>.
            </summary>
            <param name="numerical"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Convert(System.String)">
            <summary>
            Converts dotted <see cref="T:System.String"/> to unsigned integer array.
            </summary>
            <param name="dotted">Dotted string.</param>
            <returns>Unsigned integer array.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ObjectIdentifier.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Equals(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj"/>.
            Zero
            This instance is equal to <paramref name="obj"/>.
            Greater than zero
            This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
                <paramref name="obj"/> is not the same type as this instance.
            </exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.op_Equality(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.op_Inequality(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.op_GreaterThan(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.op_LessThan(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Equals(System.IComparable{Lextm.SharpSnmpLib.ObjectIdentifier},Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.Create(System.UInt32[],System.UInt32)">
            <summary>
            Creates a new <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> instance.
            </summary>
            <param name="numerical">The numerical.</param>
            <param name="extra">The extra.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifier.AppendTo(System.UInt32[],System.UInt32)">
            <summary>
            Appends an extra number to the array.
            </summary>
            <param name="original">The original array.</param>
            <param name="extra">The extra.</param>
            <returns></returns>       
        </member>
        <member name="T:Lextm.SharpSnmpLib.ObjectIdentifierConverter">
            <summary>
            The <see cref="T:System.ComponentModel.TypeConverter"/> dedicated for the <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the arguments.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ObjectIdentifierConverter.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.OctetString">
            <summary>
            OctetString type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.OctetString"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> with a specific <see cref="T:System.String"/>. This string is treated in specific <see cref="P:Lextm.SharpSnmpLib.OctetString.Encoding"/>.
            </summary>
            <param name="content">String.</param>
            <param name="encoding">Encoding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(System.String)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> with a specific <see cref="T:System.String"/>. This string is treated as UTF-16.
            </summary>
            <param name="content">String.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.#ctor(Lextm.SharpSnmpLib.Levels)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.OctetString"/> with a specific <see cref="T:Lextm.SharpSnmpLib.Levels"/>.
            </summary>
            <param name="level"></param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.Encoding">
            <summary>
            Encoding of this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.GetRaw">
            <summary>
            Gets raw bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.Empty">
            <summary>
            Gets the empty string.
            </summary>
            <value>The empty.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToLevels">
            <summary>
            Returns a <see cref="T:Lextm.SharpSnmpLib.Levels"/> that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToHexString">
            <summary>
            Returns a <see cref="T:System.String"/> in a hex form that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToString(System.Text.Encoding)">
            <summary>
            Returns a <see cref="T:System.String"/> in a specific <see cref="P:Lextm.SharpSnmpLib.OctetString.Encoding"/> that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> in UTF-16 that represents this <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.Equals(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.OctetString"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.op_Equality(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.op_Inequality(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.ToPhysicalAddress">
            <summary>
            Converts octets to physical address.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OctetString.DefaultEncoding">
            <summary>
            Default encoding of <see cref="T:Lextm.SharpSnmpLib.OctetString"/> type.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.Equals(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.OctetString"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OctetString.IsNullOrEmpty(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Indicates whether the specified <see cref="T:Lextm.SharpSnmpLib.OctetString" /> object is a null reference (<c>Nothing</c> in Visual Basic) or an <see cref="P:Lextm.SharpSnmpLib.OctetString.Empty" /> string.
            </summary>
            <param name="value">A <see cref="T:Lextm.SharpSnmpLib.OctetString" /> reference.</param>
            <returns><c>true</c> if the <paramref name="value"/> parameter is a null reference (<c>Nothing</c> in Visual Basic) or an empty string (""); otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Opaque">
            <summary>
            Opaque type.
            </summary>
            <remarks>This type is obsolete. Use OctetString type instead.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.#ctor(System.Byte[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Opaque"/> from raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Opaque"/> instance from stream.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Opaque"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Opaque.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.GetRaw">
            <summary>
            Gets the raw bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.Equals(Lextm.SharpSnmpLib.Opaque)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.Opaque"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.op_Equality(Lextm.SharpSnmpLib.Opaque,Lextm.SharpSnmpLib.Opaque)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.op_Inequality(Lextm.SharpSnmpLib.Opaque,Lextm.SharpSnmpLib.Opaque)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Opaque.Equals(Lextm.SharpSnmpLib.Opaque,Lextm.SharpSnmpLib.Opaque)">
            <summary>
            The comparison.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.Opaque"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.OperationException">
            <summary>
            Operation exception of #SNMP.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OperationException.Agent">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.OperationException.Details">
            <summary>
            Details on operation.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.OperationException.Create(System.String,System.Net.IPAddress)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.OperationException"/> with a specific <see cref="T:System.Net.IPAddress"/>.
            </summary>
            <param name="message">Message</param>
            <param name="agent">Agent address</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ReportPdu">
            <summary>
            Report PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.ReportPdu"/> with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="errorStatus">Error status</param>
            <param name="errorIndex">Error index</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.ReportPdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ReportPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ReportPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.ReportPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.ResponsePdu">
            <summary>
            Response PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ResponsePdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ErrorCode,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.ResponsePdu"/> with all contents.
            </summary>
            <param name="requestId">The request ID.</param>
            <param name="errorStatus">Error status.</param>
            <param name="errorIndex">Error index.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ResponsePdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.ResponsePdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ResponsePdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ResponsePdu.ErrorStatus">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ResponsePdu.ErrorIndex">
            <summary>
            Error index.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ResponsePdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.ResponsePdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ResponsePdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.ResponsePdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.ResponsePdu"/>/
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Scope">
            <summary>
            Scope segment.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.#ctor(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Scope"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ISnmpPdu)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Scope"/> class.
            </summary>
            <param name="contextEngineId">The context engine ID.</param>
            <param name="contextName">Name of the context.</param>
            <param name="pdu">The PDU.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.#ctor(Lextm.SharpSnmpLib.ISnmpPdu)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Scope"/> class.
            </summary>
            <param name="pdu">The PDU.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Scope.Pdu">
            <summary>
            Gets the PDU.
            </summary>
            <value>The PDU.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Scope.ContextName">
            <summary>
            Gets or sets the name of the context.
            </summary>
            <value>The name of the context.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Scope.ContextEngineId">
            <summary>
            Gets or sets the context engine id.
            </summary>
            <value>The context engine id.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Scope.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SecurityParameters">
            <summary>
            Description of SecurityParameters.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.EngineId">
            <summary>
            Gets the engine ID.
            </summary>
            <value>The engine ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.EngineBoots">
            <summary>
            Gets the boot count.
            </summary>
            <value>The boot count.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.EngineTime">
            <summary>
            Gets the engine time.
            </summary>
            <value>The engine time.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.UserName">
            <summary>
            Gets the user name.
            </summary>
            <value>The user name.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.AuthenticationParameters">
            <summary>
            Gets the authentication parameters.
            </summary>
            <value>The authentication parameters.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.PrivacyParameters">
            <summary>
            Gets the privacy parameters.
            </summary>
            <value>The privacy parameters.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.SecurityParameters"/> class.
            </summary>
            <param name="parameters">The <see cref="T:Lextm.SharpSnmpLib.OctetString"/> that contains parameters.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.SecurityParameters"/> class.
            </summary>
            <param name="engineId">The engine ID.</param>
            <param name="engineBoots">The engine boots.</param>
            <param name="engineTime">The engine time.</param>
            <param name="userName">The user name.</param>
            <param name="authenticationParameters">The authentication parameters.</param>
            <param name="privacyParameters">The privacy parameters.</param>
            <remarks>Only <paramref name="userName"/> cannot be null.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.Create(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Creates an instance of <see cref="T:Lextm.SharpSnmpLib.SecurityParameters"/>.
            </summary>
            <param name="userName">User name.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.ToSequence">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.GetData(Lextm.SharpSnmpLib.VersionCode)">
            <summary>
            Gets the data.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SecurityParameters.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SecurityParameters.IsInvalid">
            <summary>
            Gets a value that indicates whether the hashes are invalid.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.AES192PrivacyProvider">
            <summary>
            Privacy provider for AES 192.
            </summary>
            <remarks>
            This is an experimental port from SNMP#NET project. As AES is not part of SNMP RFC, this class is provided as it is.
            If you want other AES providers, you can port them from SNMP#NET in a similar manner.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AES192PrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.AES192PrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AES192PrivacyProvider.ToString">
            <summary>
            Returns a string that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.AES256PrivacyProvider">
            <summary>
            Privacy provider for AES 256.
            </summary>
            <remarks>
            This is an experimental port from SNMP#NET project. As AES is not part of SNMP RFC, this class is provided as it is.
            If you want other AES providers, you can port them from SNMP#NET in a similar manner.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AES256PrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.AES256PrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AES256PrivacyProvider.ToString">
            <summary>
            Returns a string that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.AESPrivacyProvider">
            <summary>
            Privacy provider for AES 128.
            </summary>
            <remarks>
            <p>This is an experimental port from SNMP#NET project.</p>
            <p>The algorithm is defined in https://datatracker.ietf.org/doc/html/rfc3826</p>
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.AESPrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProvider.ToString">
            <summary>
            Returns a string that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase">
            <summary>
            Privacy provider base for AES.
            </summary>
            <remarks>
            This is an experimental port from SNMP#NET project. As AES is not part of SNMP RFC, this class is provided as it is.
            If you want other AES providers, you can port them from SNMP#NET in a similar manner.
            </remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.IsSupported">
            <summary>
            Verifies if the provider is supported.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.#ctor(System.Int32,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase"/> class.
            </summary>
            <param name="keyBytes">Key bytes.</param>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.EngineIds">
            <summary>
            Engine IDs.
            </summary>
            <remarks>This is an optional field, and only used by TRAP v2 authentication.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.Encrypt(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Encrypt scoped PDU using AES encryption protocol
            </summary>
            <param name="unencryptedData">Unencrypted scoped PDU byte array</param>
            <param name="key">Encryption key. Key has to be at least 32 bytes is length</param>
            <param name="engineBoots">Engine boots.</param>
            <param name="engineTime">Engine time.</param>
            <param name="privacyParameters">Privacy parameters out buffer. This field will be filled in with information
            required to decrypt the information. Output length of this field is 8 bytes and space has to be reserved
            in the USM header to store this information</param>
            <returns>Encrypted byte array</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key is null or length of the encryption key is too short.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.Decrypt(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <summary>
            Decrypt AES encrypted scoped PDU.
            </summary>
            <param name="encryptedData">Source data buffer</param>
            <param name="engineBoots">Engine boots.</param>
            <param name="engineTime">Engine time.</param>
            <param name="key">Decryption key. Key length has to be 32 bytes in length or longer (bytes beyond 32 bytes are ignored).</param>
            <param name="privacyParameters">Privacy parameters extracted from USM header</param>
            <returns>Decrypted byte array</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when encrypted data is null or length == 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key length is less then 32 byte or if privacy parameters
            argument is null or length other then 8 bytes</exception>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.PrivacyParametersLength">
            <summary>
            Returns the length of privacyParameters USM header field. For AES, field length is 8.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.MinimumKeyLength">
            <summary>
            Returns minimum encryption/decryption key length. For DES, returned value is 16.
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.MaximumKeyLength">
            <summary>
            Return maximum encryption/decryption key length. For DES, returned value is 16
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.KeyBytes">
            <summary>
            Gets the key bytes.
            </summary>
            <value>The key bytes.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="secret">The secret.</param>
            <param name="engineId">The engine identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.AESPrivacyProviderBase.ExtendShortKey(System.Byte[],System.Byte[],Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Some protocols support a method to extend the encryption or decryption key when supplied key
            is too short.
            </summary>
            <param name="shortKey">Key that needs to be extended</param>
            <param name="engineId">Authoritative engine id. Value is retrieved as part of SNMP v3 discovery procedure</param>
            <param name="authProtocol">Authentication protocol class instance cast as <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/></param>
            <returns>Extended key value</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.Cache`2">
            <summary>
            Collection for improving performance. Using hashing of key/value pairs.
            Oldest elements will be removed from the Cache when the capacity of the cache is reached.
            This class is not thread safe.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.Cache`2.Count">
            <summary>
            Gets the number of key/value pairs contained in the Cache.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.Cache`2.#ctor(System.Int32)">
            <summary>
            Caching class for improving performance. Oldest elements are removed as the 
            cache is filled up
            </summary>
            <param name="initialCapacity">Capacity of the cache before oldest elements start to get removed</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.Cache`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, 
            if the key is found; otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the Cache contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.Cache`2.ContainsKey(`0)">
            <summary>
            Determines whether the Cache contains the specified key.
            </summary>
            <param name="key">The key to locate in the Cache</param>
            <returns>true if the Cache contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.Cache`2.Item(`0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key of the value to get</param>
            <exception cref="T:System.ArgumentNullException"> key is null.</exception> 
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key does not exist in the collection.</exception>
            <returns>The value associated with the specified key.
             If the specified key is not found, a get operation throws a System.Collections.Generic.KeyNotFoundException,
             and a set operation creates a new element with the specified key.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.Cache`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the dictionary. If the cache has reached 
            its capacity oldest element will be removed automatically 
            </summary>
            <exception cref="T:System.ArgumentNullException">key is null</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the Cache</exception>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.Cache`2.RemoveOldestElement">
            <summary>
            Removes oldest element from the cache
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.Cache`2.IsCacheFull">
            <summary>
            Checks whether cache size has reached the capacity
            </summary>
            <returns>True if reached capacity false otherwise</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.CryptoKeyCache">
            <summary>
            Class for holding computed crypto values which are referenced by password/engineId combination
            This class is not thread safe, it does not contain any static parameters.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Security.CryptoKeyCache.CacheCapacity">
            <summary>
            Number of elements that Cache will hold before deleting old elements
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.CryptoKeyCache.EngineIdCache">
            <summary>
            Class for holding cached crypto keys computed values, since every password/engine id 
            combination will produce a different key this class is modeled using
            Dictionary of Dictionaries. This class is not thread safe.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Security.CryptoKeyCache.EngineIdCache._engineIdCache">
            <summary>
            Cache to map engineId to keys
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.EngineIdCache.#ctor(System.Int32)">
            <summary>
            Default ctor initializes EngineIdCache
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.EngineIdCache.TryGetCachedValue(System.Byte[],System.Byte[]@)">
            <summary>
            Gets the cached value associated with the specified key.
            </summary>
            <param name="engineId"> The engineId of the cached value to get.</param>
            <param name="cachedValue">
             When this method returns, contains the cachedValue associated with the specified
             engineId, if the engineId is found; otherwise, the default value for the type of the
             cachedValue parameter. This parameter is passed uninitialized.
            </param>
            <returns> True if the cache contains an element with the specified engineId; otherwise, false.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.EngineIdCache.AddValueToCache(System.Byte[],System.Byte[])">
            <summary>
            Adds value to cache
            </summary>
            <param name="engineId">engine id associated with the value</param>
            <param name="valueToCache">value to cache</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.#ctor(System.Int32)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.TryGetCachedValue(System.Byte[],System.Byte[],System.Byte[]@)">
            <summary>
            Get the cached value if it exists in the cache
            </summary>
            <param name="password">password associated with cached value</param>
            <param name="engineId">engine id associated with cached value</param>
            <param name="cachedValue">cached value, if no cache exists for specified password/engine id 
            combination default value is assigned to cachedValue </param>
            <returns>True if value exists in cache for specified password/engine id combination, false otherwise</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.AddValueToCache(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Adds computed value to the cache
            </summary>
            <param name="password">password to associate cached value with </param>
            <param name="engineId">engine id to associate cached value with</param>
            <param name="valueToCache">value being cached</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.CryptoKeyCache.Stringanize(System.Byte[])">
            <summary>
            Converts an array of bytes into a string this way we can use
            string.GetHashCode and string.Equals to allow the array of bytes 
            be the key in a hash table
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DecryptionException">
            <summary>
            Decryption exception.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DecryptionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.DecryptionException"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DecryptionException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Security.DecryptionException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DecryptionException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Security.DecryptionException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DecryptionException.GetBytes">
            <summary>
            Gets the bytes.
            </summary>        
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DecryptionException.SetBytes(System.Byte[])">
            <summary>
            Sets the bytes.
            </summary>
            <param name="value">Bytes.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DecryptionException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Security.DecryptionException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider">
            <summary>
            Default authentication provider.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope data.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.ComputeHash(System.Byte[],Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Computes the hash.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Converts password to key.
            </summary>
            <param name="password"></param>
            <param name="engineId"></param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.DigestLength">
            <summary>
            Gets the length of the digest.
            </summary>
            <value>The length of the digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultAuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider">
            <summary>
            Default privacy provider.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.DefaultPair">
            <summary>
            Default privacy provider with default authentication provider.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.#ctor(Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider"/> class.
            </summary>
            <param name="authentication">Authentication provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.EngineIds">
            <summary>
            Engine IDs.
            </summary>
            <remarks>This is an optional field, and only used by TRAP v2 authentication.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="secret">The secret.</param>
            <param name="engineId">The engine identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DefaultPrivacyProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider">
            <summary>
            Privacy provider for DES.
            </summary>
            <remarks>Ported from SNMP#NET PrivacyDES class.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.IsSupported">
            <summary>
            Verifies if the provider is supported.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.UseEcbEncryption">
            <summary>
            Flag to force using old ECB cipher mode encryption.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.EngineIds">
            <summary>
            Engine IDs.
            </summary>
            <remarks>This is an optional field, and only used by TRAP v2 authentication.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt scoped PDU using DES encryption protocol
            </summary>
            <param name="unencryptedData">Unencrypted scoped PDU byte array</param>
            <param name="key">Encryption key. Key has to be at least 32 bytes is length</param>
            <param name="privacyParameters">Privacy parameters out buffer. This field will be filled in with information
            required to decrypt the information. Output length of this field is 8 bytes and space has to be reserved
            in the USM header to store this information</param>
            <returns>Encrypted byte array</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key is null or length of the encryption key is too short.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt DES encrypted scoped PDU.
            </summary>
            <param name="encryptedData">Source data buffer</param>
            <param name="key">Decryption key. Key length has to be 32 bytes in length or longer (bytes beyond 32 bytes are ignored).</param>
            <param name="privacyParameters">Privacy parameters extracted from USM header</param>
            <returns>Decrypted byte array</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when encrypted data is null or length == 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key length is less then 32 byte or if privacy parameters
            argument is null or length other then 8 bytes</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.GetIV(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})">
            <summary>
            Generate IV from the privacy key and salt value returned by GetSalt method.
            </summary>
            <param name="privacyKey">16 byte privacy key</param>
            <param name="salt">Salt value returned by GetSalt method</param>
            <returns>IV value used in the encryption process</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.GetKey(System.Byte[])">
            <summary>
            Extract and return DES encryption key.
            Privacy password is 16 bytes in length. Only the first 8 bytes are used as DES password. Remaining
            8 bytes are used as pre-IV value.
            </summary>
            <param name="privacyPassword">16 byte privacy password</param>
            <returns>8 byte DES encryption password</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.PrivacyParametersLength">
            <summary>
            Returns the length of privacyParameters USM header field. For DES, field length is 8.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.MinimumKeyLength">
            <summary>
            Returns minimum encryption/decryption key length. For DES, returned value is 16.
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.MaximumKeyLength">
            <summary>
            Return maximum encryption/decryption key length. For DES, returned value is 16.
            
            DES protocol itself requires an 8 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 8 bytes of the key are used.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="secret">The secret.</param>
            <param name="engineId">The engine identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.DESPrivacyProvider.ToString">
            <summary>
            Returns a string that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider">
            <summary>
            Authentication provider interface.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Converts password to key.
            </summary>
            <param name="password">The password.</param>
            <param name="engineId">The engine id.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IAuthenticationProvider.DigestLength">
            <summary>
            Gets the length of the digest.
            </summary>
            <value>The length of the digest.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.IPrivacyProvider">
            <summary>
            Privacy provider interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IPrivacyProvider.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.IPrivacyProvider.EngineIds">
            <summary>
            Engine IDs.
            </summary>
            <remarks>This is an optional field, and only used by TRAP v2 authentication.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.IPrivacyProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="secret">The secret.</param>
            <param name="engineId">The engine identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider">
            <summary>
            Authentication provider using MD5.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope data.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.DigestLength">
            <summary>
            Gets the length of the digest.
            </summary>
            <value>The length of the digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.MD5AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.PrivacyProviderExtension">
            <summary>
            Extension class for <see cref="T:Lextm.SharpSnmpLib.Security.IPrivacyProvider"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.PrivacyProviderExtension.ToSecurityLevel(Lextm.SharpSnmpLib.Security.IPrivacyProvider)">
            <summary>
            Converts to <see cref="T:Lextm.SharpSnmpLib.Levels"/>.
            </summary>
            <returns>Levels.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.PrivacyProviderExtension.GetScopeData(Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Gets the scope data.
            </summary>
            <param name="privacy">The privacy provider.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="rawScopeData">The raw scope data.</param>
            <returns>ISnmpData.</returns>
            <exception cref="T:System.ArgumentNullException">
            privacy
            or
            header
            </exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.PrivacyProviderExtension.ComputeHash(Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.Scope)">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="scope">The scope.</param>
            <param name="privacy">The privacy provider.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.PrivacyProviderExtension.VerifyHash(Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.Header,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,System.Byte[])">
            <summary>
            Verifies the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="scopeBytes">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns>
            Returns <c>true</c> if hash matches. Otherwise, returns <c>false</c>.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SaltGenerator">
            <summary>
            Salt generator.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SaltGenerator.NextSalt">
            <summary>
            Get next salt <see cref="T:System.Int64"/> value. Used internally to encrypt data.
            </summary>
            <returns>Random <see cref="T:System.Int64"/> value</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SaltGenerator.GetSaltBytes">
            <summary>
            Gets salt bytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SaltGenerator.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider">
            <summary>
            Authentication provider using SHA-1.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.DigestLength">
            <summary>
            Gets the length of the digest.
            </summary>
            <value>The length of the digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA1AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider">
            <summary>
            Authentication provider using SHA-256.
            </summary>
            <remarks>Defined in https://tools.ietf.org/html/rfc7630#page-3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider.DigestLength">
            <summary>
            Length of the digest.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA256AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider">
            <summary>
            Authentication provider using SHA-384.
            </summary>
            <remarks>Defined in https://tools.ietf.org/html/rfc7630#page-3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider.DigestLength">
            <summary>
            Length of the digest.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA384AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider">
            <summary>
            Authentication provider using SHA-512.
            </summary>
            <remarks>Defined in https://tools.ietf.org/html/rfc7630#page-3.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider.#ctor(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="password">The user password.</param>
            <param name="engineId">The engine ID.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider.CleanDigest">
            <summary>
            Gets the clean digest.
            </summary>
            <value>The clean digest.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider.ComputeHash(Lextm.SharpSnmpLib.VersionCode,Lextm.SharpSnmpLib.ISegment,Lextm.SharpSnmpLib.SecurityParameters,Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.Security.IPrivacyProvider,System.Byte[])">
            <summary>
            Computes the hash.
            </summary>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="parameters">The parameters.</param>
            <param name="data">The scope bytes.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="length">The length bytes.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider.DigestLength">
            <summary>
            Length of the digest.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.SHA512AuthenticationProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider">
            <summary>
            Privacy provider for 3DES.
            </summary>
            <remarks>
            <p>Ported from SNMP#NET Privacy3DES class.</p>
            <p>Originally defined in a draft https://datatracker.ietf.org/doc/html/draft-reeder-snmpv3-usm-3desede-00</p>
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IAuthenticationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.DESPrivacyProvider"/> class.
            </summary>
            <param name="phrase">The phrase.</param>
            <param name="auth">The authentication provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.AuthenticationProvider">
            <summary>
            Corresponding <see cref="T:Lextm.SharpSnmpLib.Security.IAuthenticationProvider"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.EngineIds">
            <summary>
            Engine IDs.
            </summary>
            <remarks>This is an optional field, and only used by TRAP v2 authentication.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Encrypt scoped PDU using DES encryption protocol
            </summary>
            <param name="unencryptedData">Unencrypted scoped PDU byte array</param>
            <param name="key">Encryption key. Key has to be at least 32 bytes is length</param>
            <param name="privacyParameters">Privacy parameters out buffer. This field will be filled in with information
            required to decrypt the information. Output length of this field is 8 bytes and space has to be reserved
            in the USM header to store this information</param>
            <returns>Encrypted byte array</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key is null or length of the encryption key is too short.</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.Decrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypt DES encrypted scoped PDU.
            </summary>
            <param name="encryptedData">Source data buffer</param>
            <param name="key">Decryption key. Key length has to be 32 bytes in length or longer (bytes beyond 32 bytes are ignored).</param>
            <param name="privacyParameters">Privacy parameters extracted from USM header</param>
            <returns>Decrypted byte array</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when encrypted data is null or length == 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when encryption key length is less then 32 byte or if privacy parameters
            argument is null or length other then 8 bytes</exception>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.GetIV(System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{System.Byte})">
            <summary>
            Generate IV from the privacy key and salt value returned by GetSalt method.
            </summary>
            <param name="privacyKey">32 byte privacy key</param>
            <param name="salt">Salt value returned by GetSalt method</param>
            <returns>IV value used in the encryption process</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.GetKey(System.Byte[])">
            <summary>
            Extract and return DES encryption key.
            Privacy password is 16 bytes in length. Only the first 8 bytes are used as DES password. Remaining
            8 bytes are used as pre-IV value.
            </summary>
            <param name="privacyPassword">16 byte privacy password</param>
            <returns>8 byte DES encryption password</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.PrivacyParametersLength">
            <summary>
            Returns the length of privacyParameters USM header field. For 3DES, field length is 8.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.MinimumKeyLength">
            <summary>
            Returns minimum encryption/decryption key length. For 3DES, returned value is 32.
            
            3DES protocol itself requires an 24 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 24 bytes of the key are used.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.MaximumKeyLength">
            <summary>
            Return maximum encryption/decryption key length. For 3DES, returned value is 32.
            
            3DES protocol itself requires an 24 byte key. Additional 8 bytes are used for generating the
            encryption IV. For encryption itself, first 24 bytes of the key are used.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.Decrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.Encrypt(Lextm.SharpSnmpLib.ISnmpData,Lextm.SharpSnmpLib.SecurityParameters)">
            <summary>
            Encrypts the specified scope.
            </summary>
            <param name="data">The scope data.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.Salt">
            <summary>
            Gets the salt.
            </summary>
            <value>The salt.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.PasswordToKey(System.Byte[],System.Byte[])">
            <summary>
            Passwords to key.
            </summary>
            <param name="secret">The secret.</param>
            <param name="engineId">The engine identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.TripleDESPrivacyProvider.ToString">
            <summary>
            Returns a string that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.User">
            <summary>
            User class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.User.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IPrivacyProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.User"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="privacy">The privacy provider.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.User.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.User.Privacy">
            <summary>
            Gets the privacy provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.User.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Security.UserRegistry">
            <summary>
            A repository to store user information for providers.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.#ctor(Lextm.SharpSnmpLib.Security.User[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.UserRegistry"/> class.
            </summary>
            <param name="users">The users.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Security.UserRegistry"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Security.UserRegistry.Count">
            <summary>
            Returns the user count.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.Add(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Security.IPrivacyProvider)">
            <summary>
            Adds the specified user name.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="privacy">The privacy provider.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.Add(Lextm.SharpSnmpLib.Security.User)">
            <summary>
            Adds the specified user.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.Find(Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Finds the specified user name.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Security.UserRegistry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Sequence">
            <summary>
            Array type.
            </summary>
            <remarks>Represents SMIv1 SEQUENCE.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(System.Byte[],Lextm.SharpSnmpLib.ISnmpData[])">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Sequence"/> instance with varied <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances.
            </summary>
            <param name="length">The length bytes.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(System.Collections.Generic.IEnumerable{Lextm.SharpSnmpLib.ISnmpData})">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Sequence"/> instance with varied <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> instances.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Sequence"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.Length">
            <summary>
            Item count in this <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Sequence.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Sequence"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Sequence.GetLengthBytes">
            <summary>
            Gets the length bytes.
            </summary>
            <returns>System.Byte[].</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SetRequestPdu">
            <summary>
            SET request PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.#ctor(System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/> instance with all contents.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="variables">Variables</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.SetRequestPdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SetRequestPdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SetRequestPdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SnmpDataExtension">
            <summary>
            <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/> extension class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SnmpDataExtension.ToBytes(Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Converts to byte format.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SnmpException">
            <summary>
            Base exception type of #SNMP.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SnmpException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SnmpException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SnmpException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SnmpException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SnmpException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SnmpException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SnmpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.SnmpException"/> instance.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.SnmpException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.SnmpException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.SnmpException.Details">
            <summary>
            Details on operation.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.SnmpType">
            <summary>
            SNMP type code. The values are tag values for SNMP types.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.EndMarker">
            <summary>
            End marker.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Integer32">
            <summary>
            INTEGER type. (SMIv1, SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.OctetString">
            <summary>
            OCTET STRING type.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Null">
            <summary>
            NULL type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.ObjectIdentifier">
            <summary>
            OBJECT IDENTIFIER type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Sequence">
            <summary>
            RFC1213 sequence for whole SNMP packet beginning
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.IPAddress">
            <summary>
            IpAddress type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Counter32">
            <summary>
            Counter32 type. (SMIv1, SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Gauge32">
            <summary>
            Gauge32 type. (SMIv1, SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.TimeTicks">
            <summary>
            TimeTicks type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Opaque">
            <summary>
            Opaque type. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.NetAddress">
            <summary>
            Network Address. (SMIv1)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Counter64">
            <summary>
            Counter64 type. (SMIv2)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Unsigned32">
            <summary>
            Unsigned32 type. (Use this code in RFC 1442)
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.NoSuchObject">
            <summary>
            No such object exception.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.NoSuchInstance">
            <summary>
            No such instance exception.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.EndOfMibView">
            <summary>
            End of MIB view exception.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetRequestPdu">
            <summary>
            Get request PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetNextRequestPdu">
            <summary>
            Get Next request PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.ResponsePdu">
            <summary>
            Response PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.SetRequestPdu">
            <summary>
            Set request PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.TrapV1Pdu">
            <summary>
            Trap v1 PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.GetBulkRequestPdu">
            <summary>
            Get Bulk PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.InformRequestPdu">
            <summary>
            Inform PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.TrapV2Pdu">
            <summary>
            Trap v2 PDU.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.ReportPdu">
            <summary>
            Report PDU. SNMP v3.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.SnmpType.Unknown">
            <summary>
            Defined by #SNMP for unknown type.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.StreamExtension">
            <summary>
            Stream extension class.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TimeTicks">
            <summary>
            TimeTicks type.
            </summary>
            <remarks>Represents SNMP TimeTicks type.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.UInt32)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> instance with a specific count.
            </summary>
            <param name="count">Count</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.TimeSpan)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> instance with <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="span">The time span.</param>        
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.Byte[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> instance with raw bytes.
            </summary>
            <param name="raw">Raw bytes</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> class.
            </summary>
            <param name="length">The length.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToUInt32">
            <summary>
            Returns an <see cref="T:System.Int32"/> that represents the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToTimeSpan">
            <summary>
            Returns <see cref="T:System.TimeSpan"/> representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TimeTicks.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>. </param>
            <returns><value>true</value> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.Equals(Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><value>true</value> if the current object is equal to the <paramref name="other"/> parameter; otherwise, <value>false</value>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.op_Equality(Lextm.SharpSnmpLib.TimeTicks,Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            The equality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.op_Inequality(Lextm.SharpSnmpLib.TimeTicks,Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            The inequality operator.
            </summary>
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TimeTicks.Equals(Lextm.SharpSnmpLib.TimeTicks,Lextm.SharpSnmpLib.TimeTicks)">
            <summary>
            The comparison.
            </summary> 
            <param name="left">Left <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <param name="right">Right <see cref="T:Lextm.SharpSnmpLib.TimeTicks"/> object</param>
            <returns>
            Returns <c>true</c> if the values of its operands are not equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TrapV1Pdu">
            <summary>
            Trap v1 PDU.
            </summary>
            <remarks>represents the PDU of trap v1 message.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.#ctor(System.UInt32[],Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.TimeTicks,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/> instance with PDU elements.
            </summary>
            <param name="enterprise">Enterprise</param>
            <param name="agent">Agent address</param>
            <param name="generic">Generic trap type</param>
            <param name="specific">Specific trap type</param>
            <param name="timestamp">Time stamp</param>
            <param name="variables">Variable binds</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.IP,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.Integer32,Lextm.SharpSnmpLib.TimeTicks,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/> instance with PDU elements.
            </summary>
            <param name="enterprise">Enterprise</param>
            <param name="agent">Agent address</param>
            <param name="generic">Generic trap type</param>
            <param name="specific">Specific trap type</param>
            <param name="timestamp">Time stamp</param>
            <param name="variables">Variable binds</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.AgentAddress">
            <summary>
            Agent address.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Generic">
            <summary>
            Generic trap type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Specific">
            <summary>
            Specific trap type.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV1Pdu.Variables">
            <summary>
            Variable binds.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV1Pdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.TrapV1Pdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.TrapV2Pdu">
            <summary>
            TRAP v2 PDU.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.#ctor(System.Int32,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.TrapV2Pdu"/> instance with all content.
            </summary>
            <param name="requestId">Request ID.</param>
            <param name="enterprise">Enterprise.</param>
            <param name="time">Time stamp.</param>
            <param name="variables">Variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.#ctor(System.Tuple{System.Int32,System.Byte[]},System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.TrapV2Pdu"/> class.
            </summary>
            <param name="length">The length data.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.Variables">
            <summary>
            Variables.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.RequestId">
            <summary>
            Gets the request ID.
            </summary>
            <value>The request ID.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.ErrorStatus">
            <summary>
            Gets the error status.
            </summary>
            <value>The error status.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.ErrorIndex">
            <summary>
            Gets the index of the error.
            </summary>
            <value>The index of the error.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.TypeCode">
            <summary>
            Type code.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.AppendBytesTo(System.IO.Stream)">
            <summary>
            Appends the bytes to <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.Enterprise">
            <summary>
            Enterprise.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.TrapV2Pdu.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.TrapV2Pdu"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.TrapV2Pdu.Decorate(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Decorates a list of <see cref="T:Lextm.SharpSnmpLib.Variable"/> objects with time and enterprise ID.
            </summary>
            <param name="variables">The variables.</param>
            <returns>Decorated list.</returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Variable">
            <summary>
            Variable bind.
            </summary>
            <remarks>
            <para>Represents SNMP variable bind.</para>
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(System.UInt32[])">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific object identifier.
            </summary>
            <param name="id">Object identifier</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(System.UInt32[],Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific <see cref="T:Lextm.SharpSnmpLib.ObjectIdentifier"/> and <see cref="T:Lextm.SharpSnmpLib.ISnmpData"/>.
            </summary>
            <param name="id">Object identifier</param>
            <param name="data">Data</param>
            <remarks>If you set <c>null</c> to <paramref name="data"/>, you get a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance whose <see cref="P:Lextm.SharpSnmpLib.Variable.Data"/> is a <see cref="T:Lextm.SharpSnmpLib.Null"/> instance.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.ISnmpData)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance with a specific object identifier and data.
            </summary>
            <param name="id">Object identifier</param>
            <param name="data">Data</param>
            <remarks>If you set <c>null</c> to <paramref name="data"/>, you get a <see cref="T:Lextm.SharpSnmpLib.Variable"/> instance whose <see cref="P:Lextm.SharpSnmpLib.Variable.Data"/> is a <see cref="T:Lextm.SharpSnmpLib.Null"/> instance.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Variable.Id">
            <summary>
            Variable object identifier.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Variable.Data">
            <summary>
            Variable data.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.Transform(Lextm.SharpSnmpLib.Sequence)">
            <summary>
            Converts variable binds section to variable binds list.
            </summary>
            <param name="varbindSection"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.Transform(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Converts variable binds to variable binds section.
            </summary>
            <param name="variables"></param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Variable.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Variable"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.VersionCode">
            <summary>
            Protocol version code.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V1">
            <summary>
            SNMP v1.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V2">
            <summary>
            SNMP v2 classic.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V2U">
            <summary>
            SNMP v2u is obsolete.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.VersionCode.V3">
            <summary>
            SNMP v3.
            </summary>
        </member>
    </members>
</doc>
